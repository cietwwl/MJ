package com.zxz.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Pattern;

import javax.servlet.http.HttpServletRequest;

import com.zxz.dao.ConsumeRecordDao;
import com.zxz.dao.OperateUserDao;
import com.zxz.dao.UserMapper;
import com.zxz.dao.impl.ConsumeRecordDaoImpl;
import com.zxz.dao.impl.OperateUserDaoImpl;
import com.zxz.dao.impl.UserMapperImpl;
import com.zxz.domain.ConsumeRecord;
import com.zxz.domain.OperateUser;
import com.zxz.domain.User;
import com.zxz.util.PageUtil;
import com.zxz.util.StringUtil;

public class UserService {

	UserMapper userDao = new UserMapperImpl();
	ConsumeRecordDao consumeRecordDao = new ConsumeRecordDaoImpl();
	OperateUserDao operateUserDao = new OperateUserDaoImpl();
	/**分页查询用户
	 * @param pageUtil
	 * @param nickName
	 * @param userId
	 */
	public void findUserByPage(PageUtil<User> pageUtil,String idOrNick){
		int index = pageUtil.getIndex();
		int size = pageUtil.getSize();
		Map<String, Object> map = new HashMap<String, Object>();
		if(idOrNick!=null&&!"".equals(idOrNick)){
			String REGEX_ID = "^[\\d]*";
			boolean isId = Pattern.matches(REGEX_ID, idOrNick.trim());//判读是否是数字
			if(isId){
				map.put("id", idOrNick);
			}else{
				map.put("nickName", idOrNick);
			}
		}
		int toatal = userDao.selectUserListTotal(map);
		map.put("rowStart",(index-1)*size);
		map.put("pageSize",size);
		List<User> userList = userDao.selectUserList(map);
		pageUtil.setList(userList);
		pageUtil.setTotalCount(toatal);
	}
	
	/**根据用户ID查询用户的信息
	 * @param userId
	 * @return
	 */
	public User findUserById(int userId){
		User user = userDao.selectByPrimaryKey(userId);
		return user;
	}

	/**添加用户的房卡
	 * @param userId
	 * @param total
	 * @param operateId 代理id
	 * @return
	 */
	public int addUserCardByUserId(String userId, String total, Integer operateId,float money) {
		Map<String, Object> map = new HashMap<String, Object>();
		ConsumeRecord record = new ConsumeRecord();
		record.setUserid(Integer.parseInt(userId));
		record.setTotal(Integer.parseInt(total));
		record.setOperateId(operateId);//操作人员id
		record.setMoney(money);
		int result = consumeRecordDao.addUserCardByUserId(record);
		return result;
	}
	
	/**查询用户的充值记录 
	 * @param pageUtil
	 * @param userid
	 */
	public void queryUserChargeRecord(PageUtil<Map<String, Object>> pageUtil,int userid){
		int size = pageUtil.getSize();
		Map<String, Object> parameterMap = new HashMap<>();
		parameterMap.put("rowStart", pageUtil.getRowStart());
		parameterMap.put("pageSize", size);
		parameterMap.put("userId", userid);
		parameterMap.put("type", 0);
		int count = consumeRecordDao.selectUserRechargeRecordCount(parameterMap);
		pageUtil.setTotalCount(count);
		List<Map<String,Object>> list = consumeRecordDao.selectUserRechargeRecord(parameterMap);
		pageUtil.setList(list);
	}

	/**登录
	 * @param userName
	 * @param passWord
	 * @param request 
	 * @return
	 */
	public boolean login(String userName, String passWord, HttpServletRequest request) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("userName", userName);
		map.put("passWord", passWord);
		List<OperateUser> list = operateUserDao.selectListByMap(map);
		if(list.size()>0){
			OperateUser operateUser = list.get(0);
			request.getSession().setAttribute("user",operateUser);
			return true;
		}
		return false;
	}

	/**代理人员查看充值
	 * @param pageUtil
	 * @param operateId 充值人员的id
	 * @param beginDate 开始时间
	 * @param endDate 结束时间
	 */
	public void findChargeRecord(PageUtil<Map<String, Object>> pageUtil,
			Integer operateId, String beginDate, String endDate) {
		Map<String, Object> map = new HashMap<>();
		map.put("operateId", operateId);
		map.put("rowStart", pageUtil.getRowStart());
		map.put("pageSize", pageUtil.getSize());
		if(!StringUtil.isNull(beginDate)){
			map.put("beginDate", beginDate);//开始时间
		}
		if(!StringUtil.isNull(endDate)){
			map.put("endDate", endDate);//结束时间
		}
		List<Map<String,Object>> list = consumeRecordDao.selectUserRechargeRecord(map);
		//System.out.println(list);
		pageUtil.setList(list);
		int total = consumeRecordDao.selectUserRechargeRecordCount(map);
		pageUtil.setTotalCount(total);
	}
	
}
